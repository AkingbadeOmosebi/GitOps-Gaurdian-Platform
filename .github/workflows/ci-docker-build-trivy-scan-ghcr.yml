name: Build and Scan with Trivy

on:
  workflow_run:
    workflows: ["OWASP Dependency-Check"]
    types: [completed]
  workflow_dispatch: {}

jobs:
  build_scan_push:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event.workflow_run.conclusion == 'success' ||
      github.event.workflow_run.conclusion == 'skipped'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: coffee-app

    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase registry, short SHA, and SemVer
        run: |
          REGISTRY=$(echo "ghcr.io/${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=${GITHUB_SHA:0:7}
          SEMVER="1.0.${{ github.run_number }}"
          echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "SEMVER=$SEMVER" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build \
            -t "$REGISTRY/$IMAGE_NAME:$SHORT_SHA" \
            -t "$REGISTRY/$IMAGE_NAME:$SEMVER" \
            -t "$REGISTRY/$IMAGE_NAME:latest" \
            ./app
          echo "Built: $REGISTRY/$IMAGE_NAME:$SHORT_SHA"
          echo "Built: $REGISTRY/$IMAGE_NAME:$SEMVER"
          echo "Built: $REGISTRY/$IMAGE_NAME:latest"

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: table
          exit-code: 1
          severity: 'CRITICAL,HIGH'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GHCR
        run: |
          echo "Pushing images to GHCR..."
          docker push "$REGISTRY/$IMAGE_NAME:$SHORT_SHA"
          docker push "$REGISTRY/$IMAGE_NAME:$SEMVER"
          docker push "$REGISTRY/$IMAGE_NAME:latest"
          echo "Images pushed successfully to $REGISTRY/$IMAGE_NAME"